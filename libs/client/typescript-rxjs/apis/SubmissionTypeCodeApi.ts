// tslint:disable
/**
 * FOM API
 * API for FOM backend
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import {
  BaseAPI,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime';
import { SubmissionTypeCodeDto } from '../models';

export interface SubmissionTypeCodeControllerFindOneRequest {
  id: string;
}

/**
 * no description
 */
export class SubmissionTypeCodeApi extends BaseAPI {
  /**
   */
  submissionTypeCodeControllerFindAll(): Observable<
    Array<SubmissionTypeCodeDto>
  >;
  submissionTypeCodeControllerFindAll(
    opts?: OperationOpts
  ): Observable<RawAjaxResponse<Array<SubmissionTypeCodeDto>>>;
  submissionTypeCodeControllerFindAll(
    opts?: OperationOpts
  ): Observable<
    Array<SubmissionTypeCodeDto> | RawAjaxResponse<Array<SubmissionTypeCodeDto>>
  > {
    return this.request<Array<SubmissionTypeCodeDto>>(
      {
        url: '/api/submission-type-code',
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  submissionTypeCodeControllerFindOne({
    id,
  }: SubmissionTypeCodeControllerFindOneRequest): Observable<SubmissionTypeCodeDto>;
  submissionTypeCodeControllerFindOne(
    { id }: SubmissionTypeCodeControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<RawAjaxResponse<SubmissionTypeCodeDto>>;
  submissionTypeCodeControllerFindOne(
    { id }: SubmissionTypeCodeControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<
    SubmissionTypeCodeDto | RawAjaxResponse<SubmissionTypeCodeDto>
  > {
    throwIfNullOrUndefined(id, 'id', 'submissionTypeCodeControllerFindOne');

    return this.request<SubmissionTypeCodeDto>(
      {
        url: '/api/submission-type-code/{id}'.replace('{id}', encodeURI(id)),
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }
}
