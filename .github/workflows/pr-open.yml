name: Pull Request

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # TRIGGERS: ('frontend/' 'backend/' '.github/openshift' '.github/workflows')
  NAME: fom

jobs:
  # check:
  #   name: Check
  #   outputs:
  #     build: ${{ steps.check.outputs.build }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Check and process modified files
  #       id: check
  #       run: |
  #         # Fetch main to diff against
  #         git fetch origin main:refs/remotes/origin/master

  #         # Trigger build if diff matches any triggers
  #         TRIGGERS=${{ env.TRIGGERS }}
  #         while read -r check
  #         do
  #             for t in "${TRIGGERS[@]}"; do
  #                 if [[ "${check}" =~ "${t}" ]]
  #                 then
  #                     # Output build=true for next steps
  #                     echo "::set-output name=build::true"
  #                     echo -e "${t}\n --> ${check}\n"
  #                     exit 0
  #                 fi
  #             done
  #         done < <(git diff origin/main --name-only)
  #         echo "Build and deploy workflows not triggered"

  build-backend:
    name: Build-API
    # needs:
    #   - check
    # if: needs.check.outputs.build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: api/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.event.number }}-api
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend:
    name: Build-Frontend
    # needs:
    #   - check
    # if: needs.check.outputs.build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.event.number }}-frontend
          cache-from: type=gha
          cache-to: type=gha,mode=max
