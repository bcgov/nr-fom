name: Pull Request Open

on:
  pull_request:

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prep:
    name: Prep
    outputs:
      url: ${{ steps.vars.outputs.url }}
    permissions:
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - name: PR Greeting
        env:
          DOMAIN: apps.silver.devops.gov.bc.ca
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
             - [api](https://fom-${{ github.event.number }}.${{ env.DOMAIN }}/api)
             - [admin](https://fom-${{ github.event.number }}.${{ env.DOMAIN }}/admin)
             - [public](https://fom-${{ github.event.number }}.${{ env.DOMAIN }}/public)

            Once merged, code will be promoted and handed off to following workflow run.
             - [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

      - name: KeyCloak Redirect URL
        uses: bcgov/nr-keycloak-redirect@v0.0.2
        with:
          add_delete: "add"
          redirect: https://fom-${{ github.event.number }}.apps.silver.devops.gov.bc.ca/*
          secret: ${{ secrets.KC_SECRET }}
          clientid: ${{ secrets.KC_CLIENTID }}
          clientid_2: "fom"
          realm: ${{ secrets.KC_REALM }}
          host: ${{ secrets.KC_HOST }}

      # This is a workaround, because matrix parameters can use outputs, but not vars
      - name: Variables
        id: vars
        run: echo "url=fom-${{ github.event.number }}.apps.silver.devops.gov.bc.ca" >> $GITHUB_OUTPUT

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [admin, api, db, public]
        include:
          - package: admin
            build_context: ./
            build_file: admin/Dockerfile
            triggers: ('admin/', 'libs/')
          - package: api
            build_context: ./
            build_file: api/Dockerfile
            triggers: ('api/', 'libs/')
          - package: db
            triggers: ('db')
          - package: public
            build_context: ./
            build_file: public/Dockerfile
            triggers: ('public/', 'libs/')
    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-builder-ghcr@main
        with:
          package: ${{ matrix.package }}
          build_context: ${{ matrix.build_context }}
          build_file: ${{ matrix.build_file }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    needs: [prep, builds]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    strategy:
      matrix:
        name: [api, admin, db, init, public]
        include:
          - name: api
            file: api/openshift.deploy.yml
            overwrite: true
            parameters:
              -p URL=${{ needs.prep.outputs.url }} -p CERTBOT=false -p REPLICA_COUNT=1
              -p FOM_EMAIL_NOTIFY=SIBIFSAF@victoria1.gov.bc.ca -p SITEMINDER_URL="https://logontest7.gov.bc.ca"
              -p KEYCLOAK_URL="https://dev.oidc.gov.bc.ca/auth" -p DB_TESTDATA=true
          - name: admin
            file: admin/openshift.deploy.yml
            overwrite: true
            parameters: -p URL=${{ needs.prep.outputs.url }} -p CERTBOT=false -p REPLICA_COUNT=1
          - name: db
            file: db/openshift.deploy.yml
            overwrite: false
          - name: init
            file: libs/openshift.init.yml
            overwrite: false
          - name: public
            file: public/openshift.deploy.yml
            overwrite: true
            parameters: -p URL=${{ needs.prep.outputs.url }} -p CERTBOT=false -p REPLICA_COUNT=1
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            -p PROMOTE=ghcr.io/${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}
            -p ZONE=${{ github.event.number }} ${{ matrix.parameters }}
