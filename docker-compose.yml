---
version: '3.8'

networks:
  backend:
volumes:
  postgres-data:

services:
  api:
    container_name: api
    depends_on:
      - db
    entrypoint:
      - "sh"
      - "-c"
      - npm ci && npm run start:api
    environment:
      - DB_HOST=db
      - DB_NAME=fom
      - DB_PASSWORD=test
      - DB_SSL=false
      - DB_TESTDATA='true'
      - DB_TYPE=postgres
      - DB_USERNAME=postgres
      - KEYCLOAK_ENABLED='false'
      - BYPASS_CORS='true'
      - OBJECT_STORAGE_URL=nrs.objectstore.gov.bc.ca
      - OBJECT_STORAGE_ACCESS_ID=nr-fom-dev
    image: node:14
    ports:
      - '3333:3333'
    links:
      - 'db:database'
    volumes:
      - .:/app:z
      - /app/node_modules
    working_dir: "/app"

  db:
    container_name: fom-db
    # Postgis with extensions (postgis_topology, fuzzystrmatch, postgis_tiger_geocoder)
    image: postgis/postgis:13-master
    # Add pgcrypto extension (sed) if not present (grep), then start normally (entrypoint)
    entrypoint:
      - sh
      - -c
      - "grep -qxF 'CREATE EXTENSION IF NOT EXISTS pgcrypto'/docker-entrypoint-initdb.d/10_postgis.sh || \
          sed -i '/postgis_tiger_geocoder;*/a CREATE EXTENSION IF NOT EXISTS pgcrypto;' \
            /docker-entrypoint-initdb.d/10_postgis.sh && \
          /usr/local/bin/docker-entrypoint.sh postgres"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=fom
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PORT=5342
    volumes:
      - postgres-data:/var/lib/postgres/data
    ports:
      - '5432:5432'
