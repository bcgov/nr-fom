---
version: '3.8'

volumes:
  postgres-data:

services:
  admin:
    container_name: admin
    depends_on:
      api:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - echo npm i -g @nestjs/cli@^7.6.0 typescript@~4.1.6 &&
        npm i &&
        npm i --no-save express@^4.17.1 helmet@^4.6.0 rxjs@^7.5.4 rxjs-compat &&
        npm run build:admin &&
        cp docker/admin/admin.js dist &&
        node dist/admin.js || sleep 6000
    environment:
      - FOM_ENV=dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/admin"]
      interval: 10s
      retries: 3
      start_period: 60s
      timeout: 5s
    image: node:14
    ports:
      - 4200:4200
    volumes:
      - .:/app:z
      - .volumes/node-admin:/app/node_modules:z
    working_dir: /app

  api:
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - npm i && npm run start:api
    environment:
      - DB_HOST=db
      - DB_NAME=fom
      - DB_PASSWORD=test
      - DB_SSL=false
      - DB_TESTDATA=true
      - DB_TYPE=postgres
      - DB_USERNAME=postgres
      - KEYCLOAK_ENABLED=false
      - BYPASS_CORS=true
      - OBJECT_STORAGE_URL=nrs.objectstore.gov.bc.ca
      - OBJECT_STORAGE_ACCESS_ID=nr-fom-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/api"]
      interval: 10s
      retries: 3
      start_period: 60s
      timeout: 5s
    image: node:14
    ports:
      - 3333:3333
    links:
      - db:database
    volumes:
      - .:/app:z
      - .volumes/node-api:/app/node_modules:z
    working_dir: /app

  db:
    container_name: fom-db
    # Postgis with extensions (postgis_topology, fuzzystrmatch, postgis_tiger_geocoder)
    image: postgis/postgis:13-master
    # Add pgcrypto extension (sed) if not present (grep), then start normally (entrypoint)
    entrypoint:
      - sh
      - -c
      - "grep -qxF 'CREATE EXTENSION IF NOT EXISTS pgcrypto'/docker-entrypoint-initdb.d/10_postgis.sh || \
          sed -i '/postgis_tiger_geocoder;*/a CREATE EXTENSION IF NOT EXISTS pgcrypto;' \
            /docker-entrypoint-initdb.d/10_postgis.sh && \
          /usr/local/bin/docker-entrypoint.sh postgres"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=fom
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PORT=5342
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres-data:/var/lib/postgres/data
    ports:
      - 5432:5432

  public:
    container_name: public
    depends_on:
      api:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - npm i -g @nestjs/cli@^7.6.0 typescript@~4.1.6 &&
        npm i --no-save express@^4.17.1 helmet@^4.6.0 rxjs@^6.5.3 &&
        npm run build:public &&
        cp docker/public/public.js dist &&
        node dist/public.js
    environment:
      - FOM_ENV=dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4300/public"]
      interval: 10s
      retries: 3
      start_period: 60s
      timeout: 5s
    image: node:14
    ports:
      - 4300:4300
    volumes:
      - .:/app:z
      - .volumes/node-public:/app/node_modules:z
    working_dir: /app
