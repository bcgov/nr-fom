apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "Forest Operations Map"
    tags: "fom"
    iconClass: icon-js
labels:
  app: ${NAME}-${ZONE}
  app.kubernetes.io/part-of: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Module name
    value: fom
  - name: COMPONENT
    description: Component name
    value: api
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: true
  - name: PORT
    value: "3333"
  - name: DB_TESTDATA
    description: Whether to load test data
    value: "false"
  - name: FOM_EMAIL_NOTIFY
    description: Email address to notify when a FOM closes
  - name: SMTP_SERVER
    description: SMTP Server URL for sending emails
    value: "smtp://apps.smtp.gov.bc.ca/?port=25&ignoreTLS=true&secure=false"
  - name: OBJECT_STORAGE_URL
    description: URL of Object Storage Service
    value: "nrs.objectstore.gov.bc.ca"
  - name: URL
    description: Deployment URL, e.g. fom-123.apps.silver.devops.gov.bc.ca or fom.nrs.gov.bc.ca
    required: true
  - name: CPU_REQUEST
    value: 30m
  - name: MEMORY_REQUEST
    value: 200Mi
  - name: MEMORY_LIMIT
    value: 2.2Gi
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: ORG
    description: Organization name
    value: bcgov
  - name: CRON_MINUTES
    description: Random number, 0-60, for scheduling cronjobs
    from: "[0-5]{1}[0-9]{1}"
    generate: expression
  - name: REPLICA_COUNT
    description: Number of replicas
    required: false
    value: "3"
  - name: AWS_COGNITO_DOMAIN
    description: FAM Authentication Cognito domain
    value: "prod-fam-user-pool-domain"
    required: true
  - name: AWS_COGNITO_REGION
    description: FAM Authentication Cognito region
    value: "ca-central-1"
    required: true
  - name: AWS_USER_POOLS_ID
    description: FAM Authentication Cognito user pools ID
    value: "ca-central-1_t2HSZBHur"
    required: true
  - name: AWS_USER_POOLS_WEB_CLIENT_ID
    description: FAM Authentication Cognito user pools client ID
    value: "7hpo4qa7j0hs0rkfl2pm0sto5k"
    required: true
  - name: LOGOUT_CHAIN_URL
    description: FAM Authentication Cognito logout chain url for Siteminder and Keycloak
    value: "https://logontest7.gov.bc.ca/clp-cgi/logoff.cgi?retnow=1&returl=https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/logout?redirect_uri="
    required: true
  - name: BATCH_CLIENT_RFSH_API_TKN_OP_SECRET_NAME
    description: OP secret name for CLIENT API Token
    value: fom-client-app-api
  - name: RANDOM_EXPRESSION
    description: Random expression to make sure deployments update
    from: "[a-zA-Z0-9]{32}"
    generate: expression
objects:
  - apiVersion: v1
    kind: ConfigMap
    data:
      aws-cognito-env.json: |-
        {
          "enabled": true,
          "aws_cognito_domain": "${AWS_COGNITO_DOMAIN}",
          "aws_cognito_region": "${AWS_COGNITO_REGION}",
          "aws_user_pools_id": "${AWS_USER_POOLS_ID}",
          "aws_user_pools_web_client_id": "${AWS_USER_POOLS_WEB_CLIENT_ID}",
          "aws_mandatory_sign_in": "enable",
          "oauth": {
            "domain": "${AWS_COGNITO_DOMAIN}.auth.ca-central-1.amazoncognito.com",
            "scope": ["openid"],
            "redirectSignIn": "https://${URL}/admin/search",
            "redirectSignOut": "${LOGOUT_CHAIN_URL}https://${URL}/admin/not-authorized?loggedout=true",
            "responseType": "code"
          },
          "federationTarget": "COGNITO_USER_POOLS"
        }
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: ${{REPLICA_COUNT}}
      revisionHistoryLimit: 10
      test: false
      strategy:
        type: RollingUpdate
        rollingParams:
          # Delay pod updates to account for time to run migrations
          updatePeriodSeconds: 30
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
      selector:
        matchLabels:
          deployment: ${NAME}-${ZONE}-${COMPONENT}
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deployment: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - image: ${REGISTRY}/${ORG}/nr-fom/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              name: ${NAME}
              env:
                - name: BYPASS_CORS
                  value: "false"
                - name: DB_HOST
                  value: ${NAME}-${ZONE}-db
                - name: DB_TESTDATA
                  value: ${DB_TESTDATA}
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      key: database-db
                      name: ${NAME}-${ZONE}-db
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${NAME}-${ZONE}-db
                - name: DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${NAME}-${ZONE}-db
                - name: FOM_EMAIL_NOTIFY
                  value: ${FOM_EMAIL_NOTIFY}
                - name: HOSTNAME
                  value: ${URL}
                - name: PORT
                  value: "${PORT}"
                - name: SECURITY_ENABLED
                  value: "true"
                - name: SMTP_SERVER
                  value: ${SMTP_SERVER}
                - name: OBJECT_STORAGE_ACCESS_ID
                  valueFrom:
                    secretKeyRef:
                      key: access_id
                      name: fom-object-storage
                - name: OBJECT_STORAGE_BUCKET
                  valueFrom:
                    secretKeyRef:
                      key: bucket
                      name: fom-object-storage
                - name: OBJECT_STORAGE_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: secret
                      name: fom-object-storage
                - name: OBJECT_STORAGE_URL
                  value: ${OBJECT_STORAGE_URL}
                - name: DATA_ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      key: data-encryption-key
                      name: ${NAME}-${ZONE}-${COMPONENT}
                - name: CLIENT_API_BASE_URL
                  valueFrom:
                    secretKeyRef:
                      key: api_base_url
                      name: ${BATCH_CLIENT_RFSH_API_TKN_OP_SECRET_NAME}
                - name: CLIENT_API_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: api_token
                      name: ${BATCH_CLIENT_RFSH_API_TKN_OP_SECRET_NAME}
                - name: RANDOM_EXPRESSION
                  value: ${RANDOM_EXPRESSION}
              ports:
                - containerPort: ${{PORT}}
                  protocol: TCP
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              startupProbe:
                httpGet:
                  path: /health-check
                  port: ${{PORT}}
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 30
                periodSeconds: 15
                successThreshold: 1
                failureThreshold: 30
              readinessProbe:
                httpGet:
                  path: /api/
                  port: ${{PORT}}
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 15
                timeoutSeconds: 1
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: /api/
                  port: ${{PORT}}
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 30
                timeoutSeconds: 5
              volumeMounts:
                - mountPath: /app/dist/api/src/assets/aws-cognito-env.json
                  subPath: aws-cognito-env.json
                  name: aws-cognito-env-config
          volumes:
            - name: aws-cognito-env-config
              configMap:
                name: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: ${PORT}-tcp
          protocol: TCP
          port: 80
          targetPort: ${{PORT}}
      selector:
        deployment: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
      annotations:
        haproxy.router.openshift.io/timeout: 120s # (Fix 611 - /bcgw-extract long time response in prod)
    spec:
      host: ${URL}
      path: /${COMPONENT}
      port:
        targetPort: ${PORT}-tcp
      to:
        kind: Service
        name: ${NAME}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - kind: CronJob
    apiVersion: batch/v1
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-work-flow-state-change-batch
    spec:
      concurrencyPolicy: Replace
      schedule: "${CRON_MINUTES} 8 * * * " # Run daily at 8:xx AM UTC
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: ${NAME}-${ZONE}
                cronjob: ${NAME}-${ZONE}-work-flow-state-change-batch
            spec:
              restartPolicy: OnFailure
              containers:
                - name: ${NAME}-batch
                  # Full image name required due to bug https://bugzilla.redhat.com/show_bug.cgi?id=2000216
                  image: ${REGISTRY}/${ORG}/nr-fom/${COMPONENT}:${TAG}
                  imagePullPolicy: Always
                  args: ["-batchWorkflowStateChange"]
                  env:
                    - name: DB_HOST
                      value: ${NAME}-${ZONE}-db
                    - name: DB_NAME
                      valueFrom:
                        secretKeyRef:
                          key: database-db
                          name: ${NAME}-${ZONE}-db
                    - name: DB_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: database-password
                          name: ${NAME}-${ZONE}-db
                    - name: DB_USERNAME
                      valueFrom:
                        secretKeyRef:
                          key: database-user
                          name: ${NAME}-${ZONE}-db
                    - name: OBJECT_STORAGE_ACCESS_ID
                      valueFrom:
                        secretKeyRef:
                          key: access_id
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_BUCKET
                      valueFrom:
                        secretKeyRef:
                          key: bucket
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_SECRET
                      valueFrom:
                        secretKeyRef:
                          key: secret
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_URL
                      value: ${OBJECT_STORAGE_URL}
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
  - kind: CronJob
    apiVersion: batch/v1
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-fc-client-data-refresh-batch
    spec:
      concurrencyPolicy: Replace
      schedule: "${CRON_MINUTES} 10 * * * " # Run daily at 10:xx AM UTC
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: ${NAME}-${ZONE}
                cronjob: ${NAME}-${ZONE}-fc-client-data-refresh-batch
            spec:
              restartPolicy: OnFailure
              containers:
                - name: ${NAME}-batch
                  # Full image name required due to bug https://bugzilla.redhat.com/show_bug.cgi?id=2000216
                  image: ${REGISTRY}/${ORG}/nr-fom/${COMPONENT}:${TAG}
                  imagePullPolicy: Always
                  args: ["-batchForestClientDataRefresh"]
                  env:
                    - name: DB_HOST
                      value: ${NAME}-${ZONE}-db
                    - name: DB_NAME
                      valueFrom:
                        secretKeyRef:
                          key: database-db
                          name: ${NAME}-${ZONE}-db
                    - name: DB_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: database-password
                          name: ${NAME}-${ZONE}-db
                    - name: DB_USERNAME
                      valueFrom:
                        secretKeyRef:
                          key: database-user
                          name: ${NAME}-${ZONE}-db
                    - name: OBJECT_STORAGE_ACCESS_ID
                      valueFrom:
                        secretKeyRef:
                          key: access_id
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_BUCKET
                      valueFrom:
                        secretKeyRef:
                          key: bucket
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_SECRET
                      valueFrom:
                        secretKeyRef:
                          key: secret
                          name: fom-object-storage
                    - name: OBJECT_STORAGE_URL
                      value: ${OBJECT_STORAGE_URL}
                    - name: CLIENT_API_BASE_URL
                      valueFrom:
                        secretKeyRef:
                          key: api_base_url
                          name: ${BATCH_CLIENT_RFSH_API_TKN_OP_SECRET_NAME}
                    - name: CLIENT_API_TOKEN
                      valueFrom:
                        secretKeyRef:
                          key: api_token
                          name: ${BATCH_CLIENT_RFSH_API_TKN_OP_SECRET_NAME}
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
